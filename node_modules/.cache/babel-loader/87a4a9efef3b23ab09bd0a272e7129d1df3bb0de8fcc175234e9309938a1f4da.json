{"ast":null,"code":"var _jsxFileName = \"/Users/Morteza/sei/projects/project4/frontend-healthway/src/components/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home(props) {\n  _s();\n  const [usState, setUsState] = useState();\n  const [age, setAge] = useState(0);\n  const [gender, setGender] = useState('');\n  const [sleep, setSleep] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [idealWeight, setIdealWeight] = useState();\n  const [height, setHeight] = useState(0);\n  const [bmi, setBmi] = useState('');\n  const [bmr, setBmr] = useState('');\n  const [tdee, setTdee] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [result, setResult] = useState('');\n  const [alert, setAlert] = useState('');\n  const [test, setTest] = useState('');\n  let yearNow = new Date().getFullYear();\n  let states = {\n    Hawaii: 82.3,\n    California: 81.7,\n    NewYork: 81.4,\n    Minnesota: 80.9,\n    Connecticut: 80.9,\n    Massachusetts: 80.6,\n    Colorado: 80.6,\n    NewJersey: 80.5,\n    Washington: 80.4,\n    Florida: 80.2,\n    Utah: 80.1,\n    Arizona: 80.0,\n    Oregon: 79.9,\n    Guam: 79.9,\n    RhodeIsland: 79.8,\n    Vermont: 79.8,\n    PuertoRico: 79.8,\n    NorthDakota: 79.7,\n    NewHampshire: 79.7,\n    Nebraska: 79.6,\n    USVirginIslands: 79.6,\n    Virginia: 79.5,\n    Wisconsin: 79.5,\n    Iowa: 79.4,\n    Idaho: 79.4,\n    Illinois: 79.4,\n    Texas: 79.2,\n    Maryland: 79.2,\n    Alaska: 79.0,\n    DistrictofColumbia: 79.0,\n    SouthDakota: 78.9,\n    Wyoming: 78.9,\n    Montana: 78.9,\n    UnitedStates: 78.8,\n    Maine: 78.7,\n    Nevada: 78.7,\n    Kansas: 78.5,\n    Delaware: 78.5,\n    Pennsylvania: 78.4,\n    NorthCarolina: 78.1,\n    NewMexico: 78.0,\n    Michigan: 78.1,\n    Georgia: 77.9,\n    Missouri: 77.3,\n    SouthCarolina: 77.1,\n    Indiana: 77.1,\n    Ohio: 77.0,\n    NorthernMarianaIslands: 76.1,\n    Louisiana: 76.1,\n    Tennessee: 76.0,\n    Oklahoma: 76.0,\n    Arkansas: 76.0,\n    Kentucky: 75.6,\n    Alabama: 75.5,\n    Mississippi: 74.9,\n    AmericanSamoa: 74.8,\n    WestVirginia: 74.8\n  };\n  let calBmi = e => {\n    e.preventDefault();\n    if (weight === 0 || height === 0 || age === 0) {\n      setAlert('values cannot be empty');\n    } else {\n      let bmi = weight / (height * height) * 703;\n      setBmi('Your BMI is: ' + bmi.toFixed(1) + ' and ');\n      if (bmi < 25) {\n        setResult('You are underweight');\n      } else if (bmi >= 25 && bmi < 30) {\n        setResult('You are normal');\n      } else {\n        setResult('You are overweight');\n      }\n      if (gender === 'male') {\n        let bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 1 - 5.4);\n        setBodyFat('Your Body Fat is: ' + bodyFat.toFixed(1) + '%');\n        let bmr = 66 + 13.7 * (weight * 0.453592) + 5 * (height * 2.54) - 6.8 * age;\n        setBmr('Your body burns ' + bmr.toFixed(1) + ' calories each day to keep you alive.');\n        let tdee = 1.5 * parseInt(bmr);\n        setTdee('You need ' + tdee.toFixed(1) + ' calories every day to maintain your current weight');\n        let idealWeight = 50 + 0.91 * (height * 2.54 - 152.4);\n        let checkIdealWeight = () => {\n          if (idealWeight < 0) {\n            return setIdealWeight('Your ideal weight can not be calculated');\n          } else {\n            return setIdealWeight('Your ideal weight is ' + idealWeight.toFixed(1));\n          }\n        };\n        checkIdealWeight();\n      }\n      if (gender === 'female') {\n        let bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 0 - 5.4);\n        setBodyFat(bodyFat.toFixed(1));\n        let bmr = 655 + 9.6 * (weight * 0.453592) + 1.8 * (height * 2.54) - 4.7 * age;\n        setBmr(bmr.toFixed(1));\n        let tdee = 1.5 * parseInt(bmr);\n        setTdee(tdee.toFixed(1));\n        let idealWeight = 50 + 0.91 * (height * 2.54 - 152.4);\n        let checkIdealWeight = () => {\n          if (idealWeight < 0) {\n            return setIdealWeight('Your ideal weight can not be calculated');\n          } else {\n            return setIdealWeight('Your ideal weight is ' + idealWeight.toFixed(1));\n          }\n        };\n        checkIdealWeight();\n      } else {\n        let bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 0.5 - 5.4);\n        tdee = 1.5 * bmr;\n        setBodyFat(bodyFat.toFixed(1));\n      }\n    }\n  };\n  let reset = () => {\n    window.location.reload();\n  };\n  const UserData = [{\n    id: 1,\n    year: yearNow,\n    userGain: 30000,\n    userLost: 823\n  }, {\n    id: 2,\n    year: yearNow + 1,\n    userGain: 20000,\n    userLost: 523\n  }, {\n    id: 3,\n    year: yearNow + 2,\n    userGain: 200000,\n    userLost: 223\n  }, {\n    id: 4,\n    year: yearNow + 3,\n    userGain: 30000,\n    userLost: 223\n  }];\n  const [userData, setUserData] = useState({\n    labels: UserData.map(data => data.year),\n    datasets: [{\n      label: 'user gained',\n      data: UserData.map(data => data.userGain)\n    }]\n  });\n  function updateChart(bar) {\n    console.log(bar.value);\n  }\n  let afunction = () => {\n    let g = 'Would you like to gain or lose weight?';\n    return g;\n  };\n  let hoho = () => {\n    if (age === 4) {\n      return;\n    }\n  };\n  const [ip, setIP] = useState('');\n\n  //creating function to load ip address from the API\n  const getData = async () => {\n    const res = await axios.get('https://geolocation-db.com/json/');\n    console.log(res.data);\n    setIP(res.data.state);\n  };\n  useEffect(() => {\n    //passing getData method to the lifecycle method\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 3\n  }, this);\n}\n_s(Home, \"qJpCHgZVOkvEf8HwYG7rh1jk8Tk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Route","Routes","Home","props","usState","setUsState","age","setAge","gender","setGender","sleep","setSleep","weight","setWeight","idealWeight","setIdealWeight","height","setHeight","bmi","setBmi","bmr","setBmr","tdee","setTdee","bodyFat","setBodyFat","result","setResult","alert","setAlert","test","setTest","yearNow","Date","getFullYear","states","Hawaii","California","NewYork","Minnesota","Connecticut","Massachusetts","Colorado","NewJersey","Washington","Florida","Utah","Arizona","Oregon","Guam","RhodeIsland","Vermont","PuertoRico","NorthDakota","NewHampshire","Nebraska","USVirginIslands","Virginia","Wisconsin","Iowa","Idaho","Illinois","Texas","Maryland","Alaska","DistrictofColumbia","SouthDakota","Wyoming","Montana","UnitedStates","Maine","Nevada","Kansas","Delaware","Pennsylvania","NorthCarolina","NewMexico","Michigan","Georgia","Missouri","SouthCarolina","Indiana","Ohio","NorthernMarianaIslands","Louisiana","Tennessee","Oklahoma","Arkansas","Kentucky","Alabama","Mississippi","AmericanSamoa","WestVirginia","calBmi","e","preventDefault","toFixed","parseInt","checkIdealWeight","reset","window","location","reload","UserData","id","year","userGain","userLost","userData","setUserData","labels","map","data","datasets","label","updateChart","bar","console","log","value","afunction","g","hoho","ip","setIP","getData","res","get","state"],"sources":["/Users/Morteza/sei/projects/project4/frontend-healthway/src/components/Home.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect  } from 'react';\nimport axios from 'axios';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction Home(props) {\n\tconst [usState, setUsState] = useState();\n\tconst [age, setAge] = useState(0);\n\tconst [gender, setGender] = useState('');\n\tconst [sleep, setSleep] = useState(0);\n\tconst [weight, setWeight] = useState(0);\n\tconst [idealWeight, setIdealWeight] = useState();\n\tconst [height, setHeight] = useState(0);\n\tconst [bmi, setBmi] = useState('');\n\tconst [bmr, setBmr] = useState('');\n\tconst [tdee, setTdee] = useState('');\n\tconst [bodyFat, setBodyFat] = useState('');\n\tconst [result, setResult] = useState('');\n\tconst [alert, setAlert] = useState('');\n\tconst [test, setTest] = useState('');\n\tlet yearNow = new Date().getFullYear();\n\n\tlet states = {\n\t\tHawaii: 82.3,\n\t\tCalifornia: 81.7,\n\t\tNewYork: 81.4,\n\t\tMinnesota: 80.9,\n\t\tConnecticut: 80.9,\n\t\tMassachusetts: 80.6,\n\t\tColorado: 80.6,\n\t\tNewJersey: 80.5,\n\t\tWashington: 80.4,\n\t\tFlorida: 80.2,\n\t\tUtah: 80.1,\n\t\tArizona: 80.0,\n\t\tOregon: 79.9,\n\t\tGuam: 79.9,\n\t\tRhodeIsland: 79.8,\n\t\tVermont: 79.8,\n\t\tPuertoRico: 79.8,\n\t\tNorthDakota: 79.7,\n\t\tNewHampshire: 79.7,\n\t\tNebraska: 79.6,\n\t\tUSVirginIslands: 79.6,\n\t\tVirginia: 79.5,\n\t\tWisconsin: 79.5,\n\t\tIowa: 79.4,\n\t\tIdaho: 79.4,\n\t\tIllinois: 79.4,\n\t\tTexas: 79.2,\n\t\tMaryland: 79.2,\n\t\tAlaska: 79.0,\n\t\tDistrictofColumbia: 79.0,\n\t\tSouthDakota: 78.9,\n\t\tWyoming: 78.9,\n\t\tMontana: 78.9,\n\t\tUnitedStates: 78.8,\n\t\tMaine: 78.7,\n\t\tNevada: 78.7,\n\t\tKansas: 78.5,\n\t\tDelaware: 78.5,\n\t\tPennsylvania: 78.4,\n\t\tNorthCarolina: 78.1,\n\t\tNewMexico: 78.0,\n\t\tMichigan: 78.1,\n\t\tGeorgia: 77.9,\n\t\tMissouri: 77.3,\n\t\tSouthCarolina: 77.1,\n\t\tIndiana: 77.1,\n\t\tOhio: 77.0,\n\t\tNorthernMarianaIslands: 76.1,\n\t\tLouisiana: 76.1,\n\t\tTennessee: 76.0,\n\t\tOklahoma: 76.0,\n\t\tArkansas: 76.0,\n\t\tKentucky: 75.6,\n\t\tAlabama: 75.5,\n\t\tMississippi: 74.9,\n\t\tAmericanSamoa: 74.8,\n\t\tWestVirginia: 74.8,\n\t};\n\tlet calBmi = (e) => {\n\t\te.preventDefault();\n\t\tif (weight === 0 || height === 0 || age === 0) {\n\t\t\tsetAlert('values cannot be empty');\n\t\t} else {\n\t\t\tlet bmi = (weight / (height * height)) * 703;\n\t\t\tsetBmi('Your BMI is: ' + bmi.toFixed(1) + ' and ');\n\n\t\t\tif (bmi < 25) {\n\t\t\t\tsetResult('You are underweight');\n\t\t\t} else if (bmi >= 25 && bmi < 30) {\n\t\t\t\tsetResult('You are normal');\n\t\t\t} else {\n\t\t\t\tsetResult('You are overweight');\n\t\t\t}\n\t\t\tif (gender === 'male') {\n\t\t\t\tlet bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 1 - 5.4);\n\t\t\t\tsetBodyFat('Your Body Fat is: ' + bodyFat.toFixed(1) + '%');\n\t\t\t\tlet bmr =\n\t\t\t\t\t66 + 13.7 * (weight * 0.453592) + 5 * (height * 2.54) - 6.8 * age;\n\t\t\t\tsetBmr(\n\t\t\t\t\t'Your body burns ' +\n\t\t\t\t\t\tbmr.toFixed(1) +\n\t\t\t\t\t\t' calories each day to keep you alive.'\n\t\t\t\t);\n\n\t\t\t\tlet tdee = 1.5 * parseInt(bmr);\n\t\t\t\tsetTdee(\n\t\t\t\t\t'You need ' +\n\t\t\t\t\t\ttdee.toFixed(1) +\n\t\t\t\t\t\t' calories every day to maintain your current weight'\n\t\t\t\t);\n\n\t\t\t\tlet idealWeight = 50 + 0.91 * (height * 2.54 - 152.4);\n\t\t\t\tlet checkIdealWeight = () => {\n\t\t\t\t\tif (idealWeight < 0) {\n\t\t\t\t\t\treturn setIdealWeight('Your ideal weight can not be calculated');\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn setIdealWeight(\n\t\t\t\t\t\t\t'Your ideal weight is ' + idealWeight.toFixed(1)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcheckIdealWeight();\n\t\t\t}\n\t\t\tif (gender === 'female') {\n\t\t\t\tlet bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 0 - 5.4);\n\t\t\t\tsetBodyFat(bodyFat.toFixed(1));\n\t\t\t\tlet bmr =\n\t\t\t\t\t655 + 9.6 * (weight * 0.453592) + 1.8 * (height * 2.54) - 4.7 * age;\n\t\t\t\tsetBmr(bmr.toFixed(1));\n\t\t\t\tlet tdee = 1.5 * parseInt(bmr);\n\t\t\t\tsetTdee(tdee.toFixed(1));\n\t\t\t\tlet idealWeight = 50 + 0.91 * (height * 2.54 - 152.4);\n\t\t\t\tlet checkIdealWeight = () => {\n\t\t\t\t\tif (idealWeight < 0) {\n\t\t\t\t\t\treturn setIdealWeight('Your ideal weight can not be calculated');\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn setIdealWeight(\n\t\t\t\t\t\t\t'Your ideal weight is ' + idealWeight.toFixed(1)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcheckIdealWeight();\n\t\t\t} else {\n\t\t\t\tlet bodyFat = 1.2 * bmi + 0.23 * age - (10.8 * 0.5 - 5.4);\n\n\t\t\t\ttdee = 1.5 * bmr;\n\t\t\t\tsetBodyFat(bodyFat.toFixed(1));\n\t\t\t}\n\t\t}\n\t};\n\n\tlet reset = () => {\n\t\twindow.location.reload();\n\t};\n\n\tconst UserData = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tyear: yearNow,\n\t\t\tuserGain: 30000,\n\t\t\tuserLost: 823,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tyear: yearNow + 1,\n\t\t\tuserGain: 20000,\n\t\t\tuserLost: 523,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tyear: yearNow + 2,\n\t\t\tuserGain: 200000,\n\t\t\tuserLost: 223,\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tyear: yearNow + 3,\n\t\t\tuserGain: 30000,\n\t\t\tuserLost: 223,\n\t\t},\n\t];\n\n\tconst [userData, setUserData] = useState({\n\t\tlabels: UserData.map((data) => data.year),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'user gained',\n\t\t\t\tdata: UserData.map((data) => data.userGain),\n\t\t\t},\n\t\t],\n\t});\n\n\tfunction updateChart(bar) {\n\t\tconsole.log(bar.value);\n\t}\n\n\tlet afunction = () => {\n\t\tlet g = 'Would you like to gain or lose weight?';\n\t\treturn g;\n\t};\n\n\tlet hoho = () => {\n\t\tif (age === 4) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst [ip, setIP] = useState('');\n\n\t//creating function to load ip address from the API\n\tconst getData = async () => {\n\t\tconst res = await axios.get('https://geolocation-db.com/json/');\n\t\tconsole.log(res.data);\n\t\tsetIP(res.data.state);\n\t};\n\n\tuseEffect(() => {\n\t\t//passing getData method to the lifecycle method\n\t\tgetData();\n\t}, []);\n\n\t\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}